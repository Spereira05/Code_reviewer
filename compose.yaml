services:
  web:
    build: .
    command: python -m uvicorn app.main:app --host 0.0.0.0 --reload
    volumes: 
      - .:/app 
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/code_review
      - SECRET_KEY=Spereira05
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - OLLAMA_MODEL=tinyllama
      - OLLAMA_TIMEOUT=60
    depends_on:
      - db
      - ollama-init

    
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=code_review
    ports:
      - "5432:5432"
      
  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
    # No health check for Ollama to avoid startup issues

  ollama-init:
    image: curlimages/curl:latest
    depends_on:
      - ollama
    restart: on-failure
    command: >
      sh -c "
        echo 'Waiting for Ollama to start...' &&
        until curl -s -f http://ollama:11434/api/version; do
          echo 'Ollama not ready - sleeping 5s'
          sleep 5
        done &&
        echo 'Ollama is up - checking for models' &&
        if curl -s http://ollama:11434/api/tags | grep -q '\"name\":\"tinyllama\"'; then
          echo 'Model tinyllama already exists'
        else
          echo 'Pulling model tinyllama...' &&
          curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"tinyllama\"}' &&
          echo 'Model pulled successfully'
        fi
      "
      
volumes:
  postgres_data:
  ollama_data:
